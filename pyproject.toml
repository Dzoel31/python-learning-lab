[project]
name = "python-learning-lab"
version = "1.0.2"
description = "Personal documentation of my Python journey and experiments"
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = [
    "pydantic>=2.11.7",
]

[dependency-group]
dev = [
    "black>=25.1.0",
    "mypy>=1.17.0",
    "pytest>=8.4.1",
    "python-dotenv>=1.1.1",
    "python-semantic-release>=10.2.0",
    "ruff>=0.12.5",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.16",
    "mkdocstrings[python]>=0.30.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = "."

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312", "py313"]

[tool.ruff]
line-length = 88
lint.select = ["E", "F"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
commit_parser = "conventional"
branch = "main"
version_source = "tag"
upload_to_pypi = false
changelog_file = "CHANGELOG.md"

[tool.semantic_release.commit_parser_options]
allowed_types = "build,chore,ci,docs,feat,fix,perf,style,refactor,test"
minor_types = "feat"
patch_types = "fix,perf"

[tool.semantic_release.changelog]
# Recommended patterns for conventional commits parser that is scope aware
# Refer to: https://python-semantic-release.readthedocs.io/en/latest/index.html
exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Initial [Cc]ommit.*''',
]